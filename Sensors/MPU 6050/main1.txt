//Código simples que utiliza a biblioteca MPU6050_tockn.h para a leitura do sensor e análise do sinal

/*
 *   CÓDIGO:  Q0517
 *   AUTOR:   BrincandoComIdeias
 *   LINK:    https://www.youtube.com/brincandocomideias ; https://cursodearduino.net/
 *   COMPRE:  https://www.arducore.com.br/
 *   SKETCH:  MPU6050 - Módulos para Arduino
 *   DATA:    04/09/2019
*/

// INCLUSÃO DE BIBLIOTECAS
#include <MPU6050_tockn.h>
#include <Wire.h>

// DEFINIÇÕES DE PINOS
#define pinLedX 12
#define pinLedY 11
#define pinLedZ 10

// DEFINIÇÕES
#define MPU6050_ADDR         0x68 // ENDEREÇO QUANDO O PINO AD0 ESTIVER LIGADO AO GND
//#define MPU6050_ADDR         0x69 // ENDEREÇO QUANDO O PINO AD0 ESTIVER LIGADO AO VCC


#define DEBUG
// INSTANCIANDO OBJETOS
MPU6050 mpu6050(Wire);

// DECLARAÇÃO DE VARIÁVEIS  
float anguloX;
float anguloY;
float anguloZ;

unsigned long controleTempo;

void setup() {
  Serial.begin(9600);
  
  Wire.begin();
  mpu6050.begin();
  mpu6050.calcGyroOffsets(false);// MUDAR PARA "true" SE QUISER VISUALIZAR INFORMAÇÕES DE CALIBRAÇÃO NO MONITOR SERIAL

  pinMode(pinLedX,OUTPUT);
  pinMode(pinLedY,OUTPUT);
  pinMode(pinLedZ,OUTPUT);

  // PISCA TODOS OS LEDS UMA VEZ APENAS PARA INDICAR QUE JÁ CALIBROU
      digitalWrite(pinLedX,HIGH);
      digitalWrite(pinLedY,HIGH);
      digitalWrite(pinLedZ,HIGH);
      delay(500);
      digitalWrite(pinLedX,LOW);
      digitalWrite(pinLedY,LOW);
      digitalWrite(pinLedZ,LOW);
  // ---------------------------------------------------------------
  
  #ifdef DEBUG
    Serial.println("Fim Setup");
  #endif  
}

void loop() {
  mpu6050.update();

  // GUARDA NA MEMÓRIA OS VALORES ENVIADOS PELO GIROSCOPIO
  anguloX = mpu6050.getAngleX();
  anguloY = mpu6050.getAngleY();
  anguloZ = mpu6050.getAngleZ();

  // VERIFICA SE GIROU NO EIXO X
  if (anguloX >= 25){
    Serial.println("Rampa detectada, subindo...");
    digitalWrite(pinLedX,HIGH);
  } else if (anguloX <= -25){
    Serial.println("Rampa detectada, descendo...");
    digitalWrite(pinLedX,HIGH);
  }else {
    digitalWrite(pinLedX,LOW);
  }

  // VERIFICA SE GIROU NO EIXO Y
  if (anguloY >= 25){
    Serial.println("Obstáculo detectado, esqueda...");
    digitalWrite(pinLedY,HIGH);
  } else if (anguloY <= -25){
    Serial.println("Obstáculo detectado, direita...");
    digitalWrite(pinLedY,HIGH);
  }else {
    digitalWrite(pinLedY,LOW);
  }

  // VERIFICA SE GIROU NO EIXO Z
  if (anguloZ >= 50 || anguloZ <= -70){
    digitalWrite(pinLedZ,HIGH);
  } else {
    digitalWrite(pinLedZ,LOW);
  }

  // IMPRIME O VALOR DO GIRO NO EIXO Z A CADA SEGUNDO
  if( millis() - controleTempo > 1000){
    Serial.print("Angulo de giro: ");
    Serial.println(anguloZ);

    controleTempo = millis();
  }
  
}

// IMPLEMENTO DE FUNÇÕES
